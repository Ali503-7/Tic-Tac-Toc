board = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-"]

Game_still_working = True

winner = None

player1 = "X"

def show_board():
    print("\n")
    print(board[0] + " | " , board[1] + " | ", board[2]+"    1 | 2 | 3")
    print(board[3] + " | " , board[4] + " | ", board[5]+"    4 | 5 | 6")
    print(board[6] + " | " , board[7] + " | ", board[8]+"    7 | 8 | 9")
    print("\n")

def handel_turn(player):
    position = input("choose a position from (1 - 9) : ")
    valid = False
    while not valid:
        while position not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]:
            position = input("Choose an other position from (1-9): ")
        position = int(position) - 1
        if board[position] == "-":
            valid = True
        else:
            print("you can't play here")

    board[position] = player

    show_board()
    return


def check_if_game_over():
    check_if_win()
    check_if_tie()
    return

def check_if_win():
    global winner
    diag_win = check_diagonals()
    row_win = check_row()
    col_win = check_columns()

    if diag_win:
        winner = diag_win
    elif row_win:
        winner = row_win
    elif col_win:
        winner = col_win
    else:
        winner = None
    return

def check_if_tie():
    global Game_still_working

    if "-" not in board:
        Game_still_working = False
        return True
    else:
        return False

def flip_turn():
    global player1
    if player1 == "X":
        player1 = "O"
    elif player1 == "O":
        player1 = "X"
    return  print(player1 + "'s turn")


def check_row():
    global Game_still_working

    row1 = board[0] == board[1] == board[2] != "-"
    row2 = board[3] == board[4] == board[5] != "-"
    row3 = board[6] == board[7] == board[8] != "-"

    if row1 or row2 or row3:
        Game_still_working = False
    if row1 :
        return board[0]
    elif row2:
        return board[3]
    elif row3:
        return board[6]
    else:
        return None

def check_columns():
    global Game_still_working

    col1 = board[0] == board[3] == board[6] != "-"
    col2 = board[1] == board[4] == board[7] != "-"
    col3 = board[2] == board[5] == board[8] != "-"

    if col1 or col2 or col3:
        Game_still_working = False
    if col1 :
        return board[0]
    elif col2:
        return board[1]
    elif col3:
        return board[2]
    else:
        return None

def check_diagonals():
    global Game_still_working

    dig1 = board[0] == board[4] == board[8] != "-"
    dig2 = board[2] == board[4] == board[6] != "-"

    if dig1 or dig2 :
        Game_still_working = False
    if dig1 :
        return board[0]
    elif dig2:
        return board[2]
    else:
        return None


def the_game():
    show_board()

    while Game_still_working:
        handel_turn(player1)
        check_if_game_over()

        flip_turn()


    if winner == "X" or winner == "O":
        print(winner + " is the winner")
    elif winner == None:
        print("Tie.")
    return



the_game()